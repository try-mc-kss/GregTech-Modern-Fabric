name: auto-build

on:
  push:
    branches:
      - '1.20.1'
  workflow_dispatch: # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_ACTION_NUMBER: ${{ vars.GITHUB_RUN_NUMBER }}
      GITHUB_RUN_NUMBER: ${{ vars.GITHUB_RUN_NUMBER }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2

      # 清理Loom缓存以解决POM文件相关错误
      - name: Clean Loom cache
        run: |
          echo "Cleaning Loom cache to resolve POM file issues"
          ./gradlew cleanLoom
        continue-on-error: true

      # Setup Gradle and Loom caches
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/loom-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 强制刷新依赖以解决kubejs-fabric POM文件问题
      - name: Refresh dependencies
        run: ./gradlew build --refresh-dependencies

      # 手动上传特定文件到缓存 (示例)
      - name: Upload specific files to cache (example)
        if: always() # 总是执行，即使之前的步骤失败
        run: |
          # 创建一个目录用于存储要缓存的文件
          mkdir -p ./custom-cache
          
          # 复制特定文件到缓存目录 (示例：复制构建产物)
          cp -r fabric/build/libs/*.jar ./custom-cache/ 2>/dev/null || echo "No fabric jars to copy"
          cp -r forge/build/libs/*.jar ./custom-cache/ 2>/dev/null || echo "No forge jars to copy"
          
          # 如果需要，也可以复制其他重要文件
          # cp -r ./.gradle/loom-cache/remapped_mods/dev/latvian/mods/* ./custom-cache/ 2>/dev/null || echo "No loom mods to copy"
          
          echo "Custom cache prepared"

      # 缓存自定义文件
      - name: Cache custom files
        uses: actions/cache@v3
        with:
          path: ./custom-cache
          key: ${{ runner.os }}-custom-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-custom-

      - name: Get Version
        id: var
        run: |
          MESSAGE=$(ls forge/build/libs/* | grep sources.jar -v | grep shadow.jar -v | grep slim.jar -v | awk -F 'gtceu-forge-|.jar' '{print $2}')
          echo version=$MESSAGE >> $GITHUB_OUTPUT

      - name: release
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          github-tag: ${{ steps.var.outputs.version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            fabric/build/libs/!(*-@(dev|sources|javadoc|dev-shadow)).jar
            forge/build/libs/!(*-@(dev|sources|javadoc|dev-shadow)).jar