name: Auto Release on Tag

on:
  push:
    tags:
      - 'v*'
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
  workflow_dispatch: # allow manual triggering
    inputs:
      tag:
        description: 'Tag to release'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Determine ref to checkout
        id: determine_ref
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            TAG_NAME="${{ github.event.inputs.tag }}"
          else
            TAG_NAME="${GITHUB_REF#refs/tags/}"
          fi
          
          CLEAN_TAG_NAME="${TAG_NAME//refs\//}"
          CLEAN_TAG_NAME="${CLEAN_TAG_NAME//tags\//}"
          
          echo "CLEAN_TAG_NAME=$CLEAN_TAG_NAME" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          
          echo "BASE_REF=refs/heads/${{ github.event.inputs.branch || 'main' }}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ steps.determine_ref.outputs.BASE_REF }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # 使用更稳定的temurin发行版

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3.5.0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.4.2
        with:
          cache-read-only: false
          #arguments: build

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Verify build outputs
        run: |
          echo "Fabric build outputs:"
          ls -l fabric/build/libs
          echo "Forge build outputs:"
          ls -l forge/build/libs

      - name: Get Version
        id: var
        run: |
          # 使用纯净标签名
          TAG_NAME="${{ steps.determine_ref.outputs.CLEAN_TAG_NAME }}"
          echo "raw_tag=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # 检测是否为预发布版本
          if [[ $TAG_NAME == *"-"* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi
          
          # 提取主版本号
          BASE_VERSION=$(echo "$TAG_NAME" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
          
          # 从构建产物中提取实际版本号
          FABRIC_JAR=$(ls fabric/build/libs/gtceu-fabric-*.jar | grep -v sources | grep -v slim | head -1)
          FORGE_JAR=$(ls forge/build/libs/gtceu-forge-*.jar | grep -v sources | grep -v slim | head -1)
          
          if [ ! -f "$FABRIC_JAR" ]; then
            echo "::error::Fabric jar not found: $FABRIC_JAR"
            exit 1
          fi
          
          if [ ! -f "$FORGE_JAR" ]; then
            echo "::error::Forge jar not found: $FORGE_JAR"
            exit 1
          fi

          echo "fabric_version=$FABRIC_VERSION"
          echo "forge_version=$FORGE_VERSION"
          
          FABRIC_VERSION=$(basename "$FABRIC_JAR" | sed -E 's/gtceu-fabric-(.*)\.jar/\1/')
          FORGE_VERSION=$(basename "$FORGE_JAR" | sed -E 's/gtceu-forge-(.*)\.jar/\1/')
          
          echo "fabric_version=$FABRIC_VERSION"
          echo "forge_version=$FORGE_VERSION"
          
          # 提取Minecraft版本
          MINECRAFT_VERSION=$(echo "$FABRIC_VERSION" | cut -d'-' -f1)
          echo "minecraft_version=$MINECRAFT_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4  # 升级到v1.1.4版本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.var.outputs.raw_tag }}
          release_name: GregTechCEu ${{ steps.var.outputs.base_version }}
          draft: false
          prerelease: ${{ steps.var.outputs.prerelease }}
          body: |
            Automated release for ${{ steps.var.outputs.raw_tag }}
            Minecraft version: ${{ steps.var.outputs.minecraft_version }}
            Build SHA: ${{ github.sha }}

      - name: Upload Fabric Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fabric/build/libs/gtceu-fabric-${{ steps.var.outputs.fabric_version }}.jar
          asset_name: gtceu-fabric-${{ steps.var.outputs.fabric_version }}.jar
          asset_content_type: application/java-archive

      - name: Upload Forge Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forge/build/libs/gtceu-forge-${{ steps.var.outputs.forge_version }}.jar
          asset_name: gtceu-forge-${{ steps.var.outputs.forge_version }}.jar
          asset_content_type: application/java-archive

      - name: Upload Fabric Sources Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fabric/build/libs/gtceu-fabric-${{ steps.var.outputs.fabric_version }}-sources.jar
          asset_name: gtceu-fabric-${{ steps.var.outputs.fabric_version }}-sources.jar
          asset_content_type: application/java-archive

      - name: Upload Forge Sources Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forge/build/libs/gtceu-forge-${{ steps.var.outputs.forge_version }}-sources.jar
          asset_name: gtceu-forge-${{ steps.var.outputs.forge_version }}-sources.jar
          asset_content_type: application/java-archive

      - name: mc-publish-fabric
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: h7rokZqo
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: |
            fabric/build/libs/!(*-@(dev|sources|javadoc|dev-shadow|slim)).jar
          name: GregTechCEu ${{ steps.var.outputs.base_version }}-fabric
          version: ${{ steps.var.outputs.fabric_version }}  # 使用实际构建版本
          version-type: ${{ steps.var.outputs.prerelease == 'true' && 'beta' || 'release' }}
          changelog-file: CHANGELOG.*
          loaders: |
            fabric
          game-versions: |
            ${{ steps.var.outputs.minecraft_version }}  # 使用提取的Minecraft版本
          game-version-filter: none
          java: |
            17
          retry-attempts: 2
          retry-delay: 10000
          fail-mode: fail

      - name: mc-publish-forge
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: h7rokZqo
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: |
            forge/build/libs/!(*-@(dev|sources|javadoc|dev-shadow|slim)).jar
          name: GregTechCEu ${{ steps.var.outputs.base_version }}-forge
          version: ${{ steps.var.outputs.forge_version }}  # 使用实际构建版本
          version-type: ${{ steps.var.outputs.prerelease == 'true' && 'beta' || 'release' }}
          changelog-file: CHANGELOG.*
          loaders: |
            forge
          game-versions: |
            ${{ steps.var.outputs.minecraft_version }}  # 使用提取的Minecraft版本
          game-version-filter: none
          java: |
            17
          retry-attempts: 2
          retry-delay: 10000
          fail-mode: fail