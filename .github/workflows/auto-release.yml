name: Auto Release on Tag

on:
  push:
    tags:
      - 'v*'
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
  workflow_dispatch: # 允许手动触发工作流

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3.5.0

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2

      # Setup Gradle and Loom caches
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/loom-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # 手动上传特定文件到缓存 (示例)
      - name: Upload specific files to cache (example)
        if: always() # 总是执行，即使之前的步骤失败
        run: |
          # 创建一个目录用于存储要缓存的文件
          mkdir -p ./custom-cache
          
          # 复制特定文件到缓存目录 (示例：复制构建产物)
          cp -r fabric/build/libs/*.jar ./custom-cache/ 2>/dev/null || echo "No fabric jars to copy"
          cp -r forge/build/libs/*.jar ./custom-cache/ 2>/dev/null || echo "No forge jars to copy"
          
          # 如果需要，也可以复制其他重要文件
          # cp -r ./.gradle/loom-cache/remapped_mods/dev/latvian/mods/* ./custom-cache/ 2>/dev/null || echo "No loom mods to copy"
          
          echo "Custom cache prepared"

      # 缓存自定义文件
      - name: Cache custom files
        uses: actions/cache@v3
        with:
          path: ./custom-cache
          key: ${{ runner.os }}-custom-release-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-custom-release-

      - name: Get Version
        id: var
        run: |
          MESSAGE=$(ls fabric/build/libs/* | grep sources.jar -v | grep shadow.jar -v | grep slim.jar -v | awk -F 'gtceu-fabric-|.jar' '{print $2}')
          echo fabric_version=$MESSAGE >> $GITHUB_OUTPUT
          MESSAGE=$(ls forge/build/libs/* | grep sources.jar -v | grep shadow.jar -v | grep slim.jar -v | awk -F 'gtceu-forge-|.jar' '{print $2}')
          echo forge_version=$MESSAGE >> $GITHUB_OUTPUT
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: GregTechCEu ${{ steps.var.outputs.fabric_version }}
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}

      - name: Upload Fabric Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fabric/build/libs/gtceu-fabric-${{ steps.var.outputs.fabric_version }}.jar
          asset_name: gtceu-fabric-${{ steps.var.outputs.fabric_version }}.jar
          asset_content_type: application/java-archive

      - name: Upload Forge Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forge/build/libs/gtceu-forge-${{ steps.var.outputs.forge_version }}.jar
          asset_name: gtceu-forge-${{ steps.var.outputs.forge_version }}.jar
          asset_content_type: application/java-archive

      - name: Upload Fabric Sources Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fabric/build/libs/gtceu-fabric-${{ steps.var.outputs.fabric_version }}-sources.jar
          asset_name: gtceu-fabric-${{ steps.var.outputs.fabric_version }}-sources.jar
          asset_content_type: application/java-archive

      - name: Upload Forge Sources Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forge/build/libs/gtceu-forge-${{ steps.var.outputs.forge_version }}-sources.jar
          asset_name: gtceu-forge-${{ steps.var.outputs.forge_version }}-sources.jar
          asset_content_type: application/java-archive

      - name: mc-publish-fabric
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          # Only include this section if you wish to publish
          # your assets on Modrinth.
          modrinth-id: h7rokZqo
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          # Only include this section if you wish to publish
          # your assets on CurseForge.
          # curseforge-id: 890405
          # curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: |
            fabric/build/libs/!(*-@(dev|sources|javadoc|dev-shadow|slim)).jar
            fabric/build/libs/*-@(dev|sources|javadoc|dev-shadow|slim).jar

          name: GregTechCEu ${{ steps.var.outputs.fabric_version }}-fabric
          version: mc${{ steps.var.outputs.fabric_version }}-fabric
          version-type: ${{ contains(github.ref, '-') && 'beta' || 'release' }}
          changelog-file: CHANGELOG.*

          loaders: |
            fabric
          game-versions: |
            ${{ github.ref_name }}
          game-version-filter: none
          java: |
            17
          retry-attempts: 2
          retry-delay: 10000
          fail-mode: fail

      - name: mc-publish-forge
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          # Only include this section if you wish to publish
          # your assets on Modrinth.
          modrinth-id: h7rokZqo
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          # Only include this section if you wish to publish
          # your assets on CurseForge.
          # curseforge-id: 890405
          # curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: |
            forge/build/libs/!(*-@(dev|sources|javadoc|dev-shadow|slim)).jar
            forge/build/libs/*-@(dev|sources|javadoc|dev-shadow|slim).jar

          name: GregTechCEu ${{ steps.var.outputs.forge_version }}-forge
          version: mc${{ steps.var.outputs.forge_version }}-forge
          version-type: ${{ contains(github.ref, '-') && 'beta' || 'release' }}
          changelog-file: CHANGELOG.*

          loaders: |
            forge
          game-versions: |
            ${{ github.ref_name }}
          game-version-filter: none
          java: |
            17
          retry-attempts: 2
          retry-delay: 10000
          fail-mode: fail